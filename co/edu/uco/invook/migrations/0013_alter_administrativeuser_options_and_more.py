# Generated by Django 5.2.6 on 2025-09-27 01:56

import django.contrib.auth.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('invook', '0012_administrativeuser_groups_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='administrativeuser',
            options={'verbose_name': 'Administrative User', 'verbose_name_plural': 'Administrative Users'},
        ),
        migrations.AlterModelManagers(
            name='administrativeuser',
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='administrativeuser',
            name='names',
        ),
        migrations.RemoveField(
            model_name='administrativeuser',
            name='phone',
        ),
        migrations.RemoveField(
            model_name='administrativeuser',
            name='rfid',
        ),
        migrations.RemoveField(
            model_name='administrativeuser',
            name='role',
        ),
        migrations.RemoveField(
            model_name='administrativeuser',
            name='surnames',
        ),
        migrations.AddField(
            model_name='administrativeuser',
            name='date_joined',
            field=models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined'),
        ),
        migrations.AddField(
            model_name='administrativeuser',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='first name'),
        ),
        migrations.AddField(
            model_name='administrativeuser',
            name='is_active',
            field=models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active'),
        ),
        migrations.AddField(
            model_name='administrativeuser',
            name='is_staff',
            field=models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status'),
        ),
        migrations.AddField(
            model_name='administrativeuser',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='last name'),
        ),
        migrations.AlterField(
            model_name='administrativeuser',
            name='email',
            field=models.EmailField(blank=True, max_length=254, verbose_name='email address'),
        ),
        migrations.AlterField(
            model_name='administrativeuser',
            name='id',
            field=models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID'),
        ),
        migrations.AlterField(
            model_name='administrativeuser',
            name='password',
            field=models.CharField(max_length=128, verbose_name='password'),
        ),
        migrations.AlterModelTable(
            name='administrativeuser',
            table='administrative_user',
        ),
    ]
